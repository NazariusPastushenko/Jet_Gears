<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button4.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotD
        AKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQA
        eotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3
        OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotD
        AKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQA
        eotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3
        OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotD
        AKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQA
        eotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3OAQAeotDAKC3
        OAQAeotDAKC3OAQAeotDAKCzv/73f99JqFG7QI2LAAAAAElFTkSuQmCC
</value>
  </data>
</root>